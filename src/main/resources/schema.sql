DROP TABLE IF EXISTS ratings_mpa, genres, films, films_genres, users, film_likes, friends;

create table if not exists ratings_mpa (
    rating_id int not null primary key auto_increment,
    name varchar(255),
    constraint MPA_PK primary key (rating_id)
);

create table if not exists GENRES (
    genre_id int not null primary key auto_increment,
    name varchar(255),
    constraint GENRE_PK primary key (genre_id)
);

CREATE TABLE IF NOT EXISTS films (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    description varchar(510),
    release_date date NOT NULL,
    duration integer NOT NULL,
    rating_id integer NOT NULL REFERENCES ratings_mpa(rating_id)
);

CREATE TABLE IF NOT EXISTS films_genres (
    film_id integer REFERENCES films (id) ON DELETE CASCADE,
    genre_id integer REFERENCES genres (genre_id) ON DELETE RESTRICT,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(255) NOT NULL,
    login varchar(50) NOT NULL,
    name varchar(50),
    birthday date
);

CREATE TABLE IF NOT EXISTS film_likes (
    film_id integer REFERENCES films (id) ON DELETE CASCADE,
    user_id integer REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id integer REFERENCES users (user_id),
    friend_id integer REFERENCES users (user_id)
);

